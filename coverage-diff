#!/usr/bin/env python

# The MIT License (MIT)
#
# Copyright (c) 2015 Alexander Todorov <atodorov@nospam.otb.bg>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Diff two coverage files to show gaps between two coverage runs.
# Original idea by Marc Abramowitz:
# https://bitbucket.org/ned/coveragepy/pull-requests/33

import sys
from coverage import coverage
from coverage.data import CoverageData
from coverage_tools.utils import do_diff
from optparse import OptionParser

parser = OptionParser(usage="usage: %s [options] <file1> <file2>" % __file__)
parser.add_option("-N", "--line-numbers", action="store_true",
                    dest="line_numbers", help="show line numbers")
parser.add_option("-i", "--include", action="append", default=[],
                    dest="include",
                    help="files to include in report. Supports shell globs.")
parser.add_option("-e", "--exclude", action="append", default=[],
                    dest="exclude",
                    help="files to exclude from report. Supports shell globs.")

(options, args) = parser.parse_args()

if len(args) != 2:
    sys.stderr.write(parser.usage+"\n")
    sys.exit(1)

cov1 = coverage()
cov1.data = CoverageData(args[0])
cov1.data.read()

cov2 = coverage()
cov2.data = CoverageData(args[1])
cov2.data.read()

dif = do_diff(cov1, cov2, options.line_numbers,
                options.include, options.exclude)
print "\n".join(dif)
